{"Control":{"kind":"AdvanceTime","timestamp":0}}
{"Control":{"kind":"StateMessage","who":"error","to":"All","msg":{"id":["error",0],"payload":"if Sayer says (_ has R _) and not diff {R class role} and diff {dmi Sayer}. error if not pdx restrictions on marketplaces are defined."}}}
{"Control":{"kind":"StateMessage","who":"meta","to":"All","msg":{"id":["meta",1],"payload":"Sayer says Fact if Fact within (Sayer _) and diff {Sayer meta}. error if Sayer says (_ says _) and diff {Sayer meta}. error if _ says (_ within _)."}}}
{"Control":{"kind":"StateMessage","who":"dmi","to":"All","msg":{"id":["dmi",2],"payload":"pdx restrictions on marketplaces are defined. pdx can punish (Market sold Item to Consumer for Price) if Market says (Item sold to Consumer for Price) and not pdx says ((Market sold Item to Consumer for Price) is pre- lawful). pdx can punish (Market sold Item to Consumer for Price) if Market says (Item sold to Consumer for Price) and not pdx says ((Market sold Item to Consumer for Price) is post- lawful). error if pdx says (punish (Market sold Item to Consumer for Price)) and not dmi says (pdx can punish (Market sold Item to Consumer for Price)). error if Sayer says (punish _) and diff {Sayer pdx}."}}}
{"Control":{"kind":"StateMessage","who":"pdx","to":"All","msg":{"id":["pdx",3],"payload":"error if Market says (_ sold to _ for _) and not dmi says (Market has class marketplace) and diff {0 Price}. error if Offerer says (offer _ at _ for Price) and dmi says (Offerer has class (knowledge institution)) and diff {0 Price}. offered pair (X Y) if offer (X Y) at _ for _. error if offer Item at _ for _ ad not dmi says (offered pair Item). error if Sayer says (offer (Offerer _) at _ for _) and diff {Sayer Offerer}. Mid is an acceptable price for sale of (Offerer Suffix) to Requester if Offerer says (offer Item at Market for Min) and Requester says (request Item at Market for Max) and Market says (Item sold to Consumer for Mid) and not Min > Mid and not Mid > Max. error if _ says (Item sold to Consumer for Price) and not pdx says (Price is an acceptable price for sale of item to Consumer) (Market sold Item to Consumer for Price) is pre- lawful if Market says (Item sold to Consumer for Price)."}}}
{"Control":{"kind":"StateMessage","who":"seller","to":"All","msg":{"id":["seller",4],"payload":"offer (seller chips) at market for 300."}}}
{"Control":{"kind":"StateMessage","who":"buyer","to":"All","msg":{"id":["buyer",5],"payload":"request (seller chips) at market for 400."}}}
{"Control":{"kind":"StateMessage","who":"market","to":"All","msg":{"id":["market",6],"payload":"(seller chips) sold to buyer for 360."}}}
{"Control":{"kind":"AddAgreement","agree":{"message":{"id":["error",0],"payload":"if Sayer says (_ has R _) and not diff {R class role} and diff {dmi Sayer}. error if not pdx restrictions on marketplaces are defined."},"at":0}}}
{"Control":{"kind":"EnactAction","who":"market","to":"All","action":{"id":["market","a"],"basis":{"message":{"id":["error",0],"payload":"if Sayer says (_ has R _) and not diff {R class role} and diff {dmi Sayer}. error if not pdx restrictions on marketplaces are defined."},"at":0},"justification":[{"id":["pdx",3],"payload":"error if Market says (_ sold to _ for _) and not dmi says (Market has class marketplace) and diff {0 Price}. error if Offerer says (offer _ at _ for Price) and dmi says (Offerer has class (knowledge institution)) and diff {0 Price}. offered pair (X Y) if offer (X Y) at _ for _. error if offer Item at _ for _ ad not dmi says (offered pair Item). error if Sayer says (offer (Offerer _) at _ for _) and diff {Sayer Offerer}. Mid is an acceptable price for sale of (Offerer Suffix) to Requester if Offerer says (offer Item at Market for Min) and Requester says (request Item at Market for Max) and Market says (Item sold to Consumer for Mid) and not Min > Mid and not Mid > Max. error if _ says (Item sold to Consumer for Price) and not pdx says (Price is an acceptable price for sale of item to Consumer) (Market sold Item to Consumer for Price) is pre- lawful if Market says (Item sold to Consumer for Price)."},{"id":["buyer",5],"payload":"request (seller chips) at market for 400."},{"id":["market",6],"payload":"(seller chips) sold to buyer for 360."},{"id":["seller",4],"payload":"offer (seller chips) at market for 300."},{"id":["dmi",2],"payload":"pdx restrictions on marketplaces are defined. pdx can punish (Market sold Item to Consumer for Price) if Market says (Item sold to Consumer for Price) and not pdx says ((Market sold Item to Consumer for Price) is pre- lawful). pdx can punish (Market sold Item to Consumer for Price) if Market says (Item sold to Consumer for Price) and not pdx says ((Market sold Item to Consumer for Price) is post- lawful). error if pdx says (punish (Market sold Item to Consumer for Price)) and not dmi says (pdx can punish (Market sold Item to Consumer for Price)). error if Sayer says (punish _) and diff {Sayer pdx}."},{"id":["meta",1],"payload":"Sayer says Fact if Fact within (Sayer _) and diff {Sayer meta}. error if Sayer says (_ says _) and diff {Sayer meta}. error if _ says (_ within _)."},{"id":["error",0],"payload":"if Sayer says (_ has R _) and not diff {R class role} and diff {dmi Sayer}. error if not pdx restrictions on marketplaces are defined."}]}}}