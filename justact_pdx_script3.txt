$say dmi
  error (meta excluded)
    if not meta included.
  error (non-meta said meta included)
    if Sayer says (meta included)
    and diff {Sayer meta}.
  error (Sayer shouldnt be assigning roles/classes)
    if Sayer says (_ has R _)
    and not diff {R class role}
    and diff {dmi Sayer}.
  error (non marketplace selling)
    if Market says (_ sold to _ for Price)
    and not dmi says (Market has class marketplace).
  error (pdx restrictions not defined)
    if not dmi says (pdx restrictions are defined).
  pdx restrictions on marketplaces are defined.
  pdx can punish (Market sold Item to Consumer for Price)
    if Market says (Item sold to Consumer for Price)
    and not pdx says ((Market sold Item to Consumer for Price) is pre- lawful).
  pdx can punish (Market sold Item to Consumer for Price)
    if Market says (Item sold to Consumer for Price)
    and not pdx says ((Market sold Item to Consumer for Price) is post- lawful).
  error (pdx punished Market without dmi permission)
    if pdx says (punish (Market sold Item to Consumer for Price))
    and not dmi says (pdx can punish (Market sold Item to Consumer for Price)).
  error (non pdx punishing)
    if Sayer says (punish _)
    and diff {Sayer pdx}.

$comment
  agree on the above as a foundation for justifications (at time 0).

$agree 0 0

$comment
  the DMI agent continues, making the following statement
  that restricts how PDX is allowed to punish marketplaces.

$comment
  By including the following statement's final rule in their justifications,
  users can (e.g., eagerly) prove that their sales are pre-lawful. But by
  putting that rule alongside some other constraints, the PDX is restricting the
  cases where that rule is applicable. For example, this statement is useless
  to prove pre-lawfulness of non-zero price sales by knowledge institutions.

$say pdx
  error (knowledge institution makin' cash)
    if Offerer says (offer _ at _ for Price)
    and dmi says (Offerer has class (knowledge institution))
    and diff {0 Price}.
  offered pair (X Y)
    if offer (X Y) at _ for _.
  error (non pair offered Item)
    if offer Item at _ for _
    and not pdx says (offered pair Item).
  error (Sayer cannot offer on behalf of Offerer)
    if Sayer says (offer (Offerer _) at _ for _)
    and diff {Sayer Offerer}.
  (Market sold Item to Consumer for Price) is pre- lawful
    if Market says (Item sold to Consumer for Price)
    and Offerer says (offer Item at Market for Min)
    and Requester says (request Item at Market for Max).

$say meta
  meta included.
  error
    if error _.
  Sayer says Fact
    if Fact within (Sayer _)
    and diff {Sayer meta}.
  error (non-meta said "says")
    if Sayer says (_ says _)
    and diff {Sayer meta}.
  error (non-meta said "within")
    if _ says (_ within _).

$say seller offer (seller cow) at market for 400.

$say buyer request (seller cow) at market for 250.

$say market (seller cow) sold to buyer for 310.

$say dmi
  market has class marketplace
    if market says (i agree to the dmi marketplace terms).

$say market
  i agree to the dmi marketplace terms.

$comment
  The consortium can "break the glass" in case something was stated/agreed
  which really should not have been.

$enact market 0 0 1 2 3 4 5 6 7

$agree 0 1

$comment
  The following action uses the new agreement for time1 instead
  (Which just so happens to have the same contents as the first).

$enact market 1 0 1 2 3 4 5 6 7

$inspect